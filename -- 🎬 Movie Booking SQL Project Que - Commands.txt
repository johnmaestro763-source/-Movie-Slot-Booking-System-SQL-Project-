-- üé¨ Movie Booking SQL Project Queries
-- Author: John Robin A
-- Description: Demonstrates SQL fundamentals, joins, subqueries, and filters using the Movie Booking dataset.

-- 1Ô∏è‚É£ Movies released in 2024
SELECT * FROM movie_slot.movie_booking WHERE ReleaseDate BETWEEN '2024-01-01' AND '2024-12-31';

-- 2Ô∏è‚É£ Select all movie records
SELECT * FROM movie_slot.movie_booking;

-- 3Ô∏è‚É£ Select only Title and Genre
SELECT Title, Genre FROM movie_slot.movie_booking;

-- 4Ô∏è‚É£ Display unique genres
SELECT DISTINCT Genre FROM movie_slot.movie_booking;

-- 5Ô∏è‚É£ Customers from Chennai
SELECT * FROM movie_slot.movie_booking_customers WHERE City = 'Chennai';

-- 6Ô∏è‚É£ Bookings with more than 3 seats
SELECT * FROM movie_slot.movie_booking_booking WHERE SeatsBooked > 3;

-- 7Ô∏è‚É£ Payments pending
SELECT * FROM movie_slot.movie_booking_payments WHERE Status = 'Pending';

-- 8Ô∏è‚É£ Movies released between 2023 and 2024
SELECT * FROM movie_slot.movie_booking WHERE ReleaseDate BETWEEN '01-01-2023' AND '01-01-2024';

-- 9Ô∏è‚É£ Shows priced between 200 and 400
SELECT * FROM movie_slot.movie_booking_shows WHERE TicketPrice BETWEEN 200 AND 400;

-- üîü Customers whose name starts with 'C'
SELECT * FROM movie_slot.movie_booking_customers WHERE Name LIKE 'C%';

-- 11Ô∏è‚É£ Movies ordered by ReleaseDate
SELECT * FROM movie_slot.movie_booking ORDER BY ReleaseDate ASC;

-- 12Ô∏è‚É£ Bookings ordered by BookingDate
SELECT * FROM movie_slot.movie_booking_booking ORDER BY BookingDate DESC;

-- 13Ô∏è‚É£ Total seats booked per customer
SELECT CustomerID, SUM(SeatsBooked) FROM movie_slot.movie_booking_booking GROUP BY CustomerID;

-- 14Ô∏è‚É£ Total amount paid per payment ID
SELECT PaymentID, SUM(Amount) AS Total_Amount_paid FROM movie_slot.movie_booking_payments GROUP BY PaymentID;

-- 15Ô∏è‚É£ Number of bookings for each show
SELECT ShowID, COUNT(*) FROM movie_slot.movie_booking_booking GROUP BY ShowID;

-- 16Ô∏è‚É£ Customers who booked more than 2 shows
SELECT CustomerID, COUNT(*) AS TotalBookings FROM movie_slot.movie_booking_booking GROUP BY CustomerID HAVING COUNT(*) > 2;

-- 17Ô∏è‚É£ Shows where total seats booked > 10
SELECT ShowID, SUM(SeatsBooked) FROM movie_slot.movie_booking_booking GROUP BY ShowID HAVING SUM(SeatsBooked) > 10;

-- 18Ô∏è‚É£ Delete booking with ID = 5
DELETE FROM movie_slot.movie_booking_booking WHERE BookingID = 5;

-- 19Ô∏è‚É£ Delete all pending payments older than 2024
DELETE FROM movie_slot.movie_booking_payments WHERE Status = 'Pending' AND PaymentDate < '2024-01-01';

-- 20Ô∏è‚É£ First 5 customers
SELECT * FROM movie_slot.movie_booking_customers ORDER BY CustomerID LIMIT 5;

-- 21Ô∏è‚É£ Skip first 5 customers
SELECT * FROM movie_slot.movie_booking_customers ORDER BY CustomerID LIMIT 5 OFFSET 5;

-- 22Ô∏è‚É£ Customers who booked shows with ticket price > 400
SELECT DISTINCT CustomerID FROM movie_slot.movie_booking_booking WHERE ShowID IN (
    SELECT ShowID FROM movie_slot.movie_booking_shows WHERE TicketPrice > 400
);

-- 23Ô∏è‚É£ Movies with total bookings > 10
SELECT DISTINCT MovieID FROM movie_slot.movie_booking_shows WHERE ShowID IN (
    SELECT ShowID FROM movie_slot.movie_booking_booking GROUP BY ShowID HAVING COUNT(BookingID) > 10
);

-- 24Ô∏è‚É£ INNER JOIN: Customers and Bookings
SELECT c.Name, b.BookingID, b.SeatsBooked, b.BookingDate 
FROM movie_slot.movie_booking_customers c 
INNER JOIN movie_slot.movie_booking_booking b ON c.CustomerID = b.CustomerID;

-- 25Ô∏è‚É£ LEFT JOIN: Shows and Movies
SELECT s.ShowID, s.ShowDate, s.TicketPrice, m.Title 
FROM movie_slot.movie_booking_shows s 
LEFT JOIN movie_slot.movie_booking m ON s.MovieID = m.MovieID;

-- 26Ô∏è‚É£ RIGHT JOIN: Bookings and Payments
SELECT b.BookingID, b.CustomerID, p.PaymentID, p.Amount, p.Status 
FROM movie_slot.movie_booking_booking b 
RIGHT JOIN movie_slot.movie_booking_payments p ON b.BookingID = p.BookingID;

-- 27Ô∏è‚É£ INNER JOIN: Shows, Movies, and Theatres
SELECT s.ShowID, m.Title AS MovieTitle, t.Name, s.ShowDate 
FROM movie_slot.movie_booking_shows s 
INNER JOIN movie_slot.movie_booking m ON s.MovieID = m.MovieID 
INNER JOIN movie_slot.movie_booking_theatre t ON s.TheatreID = t.TheatreID;

-- 28Ô∏è‚É£ Customers who booked more than one show on the same day
SELECT CustomerID, BookingDate, COUNT(DISTINCT ShowID)  
FROM movie_slot.movie_booking_booking 
GROUP BY CustomerID, BookingDate 
HAVING COUNT(DISTINCT ShowID) > 1;
